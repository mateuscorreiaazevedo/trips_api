generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            BigInt         @id @default(dbgenerated("ulid_generate()"))
  email         String         @unique
  first_name    String
  last_name     String
  password      String
  avatar_url    String         @default("https://www.gravatar.com/avatar/00000000000000000000000000000000?s=200&d=mm")
  birth_date    DateTime
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt
  accomodations Accomodation[]
  bookings      Booking[]
  favorites     Favorite[]
  comments      Comment[]
  stars         Star[]

  @@map("users")
}

model Accomodation {
  id          BigInt    @id @default(dbgenerated("ulid_generate()"))
  title       String
  description String
  images      Image[]
  stars       Star[]
  comments    Comment[]
  category_id BigInt

  price_per_night Float
  cleaning_fee    Float
  discount        Float?

  guests       Int
  babies       Int?
  accepts_pets Boolean
  pets         Int?

  rooms     Int
  beds      Int
  bathrooms Int
  kitchen   Boolean
  services  Service @relation(fields: [service_id], references: [id])

  location    Location   @relation(fields: [location_id], references: [id])
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  host        User       @relation(fields: [host_id], references: [id])
  host_id     BigInt
  Booking     Booking[]
  Favorite    Favorite[]
  location_id BigInt

  register_step String?
  service_id    BigInt

  @@map("accomodations")
}

model Category {
  id      BigInt   @id @default(dbgenerated("ulid_generate()"))
  tag     String   @unique
  name    String
  icon    String
  created DateTime @default(now())
  updated DateTime @updatedAt

  @@map("categories")
}

model Service {
  id BigInt @id @default(dbgenerated("ulid_generate()"))

  laundry Boolean
  wifi    Boolean
  tv      Boolean
  phone   Boolean
  ac      Boolean

  accomodations Accomodation[]
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt

  @@map("services")
}

model Image {
  id  BigInt @id @default(autoincrement())
  url String @unique

  accomodation_id BigInt
  created_at      DateTime     @default(now())
  updated_at      DateTime     @updatedAt
  Accomodation    Accomodation @relation(fields: [accomodation_id], references: [id])

  @@map("images")
}

model Location {
  id      BigInt @id @default(dbgenerated("ulid_generate()"))
  address String
  city    String
  state   String
  country String
  lat     Float
  lng     Float

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  accomodation_id BigInt
  Accomodation    Accomodation[]

  @@map("locations")
}

model Booking {
  id           BigInt       @id @default(dbgenerated("ulid_generate()"))
  total_price  Float
  accomodation Accomodation @relation(fields: [accomodation_id], references: [id])
  user         User         @relation(fields: [user_id], references: [id])

  initial_date DateTime
  final_date   DateTime

  checked_in  Boolean @default(false)
  checked_out Boolean @default(false)
  cancelled   Boolean @default(false)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user_id         BigInt
  accomodation_id BigInt

  @@map("bookings")
}

model Favorite {
  id      BigInt @id @default(dbgenerated("ulid_generate()"))
  user    User   @relation(fields: [user_id], references: [id])
  user_id BigInt

  accomodation    Accomodation @relation(fields: [accomodation_id], references: [id])
  accomodation_id BigInt

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("favorites")
}

model Comment {
  id      BigInt @id @default(dbgenerated("ulid_generate()"))
  user    User   @relation(fields: [user_id], references: [id])
  user_id BigInt

  accomodation    Accomodation @relation(fields: [accomodation_id], references: [id])
  accomodation_id BigInt

  content    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("comments")
}

model Star {
  id      BigInt @id @default(dbgenerated("ulid_generate()"))
  value   Float
  user    User   @relation(fields: [user_id], references: [id])
  user_id BigInt

  accomodation    Accomodation @relation(fields: [accomodation_id], references: [id])
  accomodation_id BigInt

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("stars")
}
